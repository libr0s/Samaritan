{"version":3,"sources":["../source/LocaleDataStore.js"],"names":["getDefaultLocale","setDefaultLocale","isLocaleDataAvailable","getLocaleData","addLocaleData","defaultLocale","localesData","locale","hasOwnProperty","localeData","Error"],"mappings":";;;;;QAQgBA,gB,GAAAA,gB;QAIAC,gB,GAAAA,gB;QAIAC,qB,GAAAA,qB;QAIAC,a,GAAAA,a;QAIAC,a,GAAAA,a;AAxBhB;AACA;AACA,IAAIC,gBAAgB,IAApB;;AAEA;AACA;AACA,IAAMC,cAAc,EAApB;;AAEO,SAASN,gBAAT,GAA4B;AAClC,QAAOK,aAAP;AACA;;AAEM,SAASJ,gBAAT,CAA0BM,MAA1B,EAAkC;AACxCF,iBAAgBE,MAAhB;AACA;;AAEM,SAASL,qBAAT,CAA+BK,MAA/B,EAAuC;AAC7C,QAAOD,YAAYE,cAAZ,CAA2BD,MAA3B,CAAP;AACA;;AAEM,SAASJ,aAAT,CAAuBI,MAAvB,EAA+B;AACrC,QAAOD,YAAYC,MAAZ,CAAP;AACA;;AAEM,SAASH,aAAT,CAAuBK,UAAvB,EAAmC;AACzC,KAAI,CAACA,UAAL,EAAiB;AAChB,QAAM,IAAIC,KAAJ,CAAU,8CAAV,CAAN;AACA;AACD;AACA;AACAJ,aAAYG,WAAWF,MAAvB,IAAiCE,UAAjC;AACA","file":"LocaleDataStore.js","sourcesContent":["// Fallback locale.\r\n// (when not a single one of the supplied \"preferred\" locales is available)\r\nlet defaultLocale = 'en'\r\n\r\n// For all locales added\r\n// their relative time formatter messages will be stored here.\r\nconst localesData = {}\r\n\r\nexport function getDefaultLocale() {\r\n\treturn defaultLocale\r\n}\r\n\r\nexport function setDefaultLocale(locale) {\r\n\tdefaultLocale = locale\r\n}\r\n\r\nexport function isLocaleDataAvailable(locale) {\r\n\treturn localesData.hasOwnProperty(locale)\r\n}\r\n\r\nexport function getLocaleData(locale) {\r\n\treturn localesData[locale]\r\n}\r\n\r\nexport function addLocaleData(localeData) {\r\n\tif (!localeData) {\r\n\t\tthrow new Error('[javascript-time-ago] No locale data passed.')\r\n\t}\r\n\t// This locale data is stored in a global variable\r\n\t// and later used when calling `.format(time)`.\r\n\tlocalesData[localeData.locale] = localeData\r\n}"]}