{"version":3,"sources":["../source/ExpandableMenu.js"],"names":["PureComponent","Component","ExpandableMenu","state","onExpand","setState","isExpanded","onCollapse","focusOut","focus","toggler","togglerNode","expand","list","collapse","toggle","onFocusOut","window","rruiCollapseOnFocusOut","storeListRef","ref","storeTogglerRef","storeTogglerNode","node","getTogglerNode","onBlur","event","onClick","disabled","props","onKeyDown","defaultPrevented","ctrlKey","altKey","shiftKey","metaKey","keyCode","preventDefault","upward","alignment","scrollIntoView","closeButtonIcon","closeLabel","style","className","togglerAriaLabel","togglerAriaHasPopup","togglerClassName","children","rest","menuToggler","menuItems","togglerElement","createElement","Children","toArray","shift","cloneElement","propTypes","string","object","oneOfType","func","oneOf","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAEA;AACA,IAAMA,gBAAgB,gBAAMA,aAAN,IAAuB,gBAAMC,SAAnD;;IAEqBC,c;;;;;;;;;;;;;;oMA+BpBC,K,GAAQ,E,QAERC,Q,GAAW;AAAA,UAAM,MAAKC,QAAL,CAAc,EAAEC,YAAY,IAAd,EAAd,CAAN;AAAA,G,QAEXC,U,GAAa,iBACb;AAAA,OADgBC,QAChB,SADgBA,QAChB;;AACC,OAAI,CAACA,QAAL,EAAe;AACd,UAAKC,KAAL;AACA;AACD,SAAKJ,QAAL,CAAc,EAAEC,YAAY,KAAd,EAAd;AACA,G,QAGDG,K,GAAQ;AAAA,UAAM,kBAAM,MAAKC,OAAL,IAAgB,MAAKC,WAA3B,CAAN;AAAA,G,QAERC,M,GAAW;AAAA,UAAM,MAAKC,IAAL,CAAUD,MAAV,EAAN;AAAA,G,QACXE,Q,GAAW;AAAA,UAAM,MAAKD,IAAL,CAAUC,QAAV,EAAN;AAAA,G,QACXC,M,GAAW;AAAA,UAAM,MAAKF,IAAL,CAAUE,MAAV,EAAN;AAAA,G,QAEXC,U,GAAa,YAAM;AAClB;AACA;AACA,OAAIC,OAAOC,sBAAP,KAAkC,KAAtC,EAA6C;AAC5C,UAAKJ,QAAL;AACA;AACD,G,QAEDK,Y,GAAe,UAACC,GAAD;AAAA,UAAS,MAAKP,IAAL,GAAYO,GAArB;AAAA,G,QAIfC,e,GAAkB,UAACD,GAAD;AAAA,UAAS,MAAKV,OAAL,GAAeU,GAAxB;AAAA,G,QAIlBE,gB,GAAmB,UAACC,IAAD;AAAA,UAAU,MAAKZ,WAAL,GAAmBY,IAA7B;AAAA,G,QACnBC,c,GAAiB;AAAA,UAAM,MAAKb,WAAX;AAAA,G,QAoFjBc,M,GAAS,UAACC,KAAD;AAAA,UAAW,MAAKb,IAAL,IAAa,MAAKA,IAAL,CAAUY,MAAV,CAAiBC,KAAjB,CAAxB;AAAA,G,QAETC,O,GAAU,UAACD,KAAD,EACV;AAAA,OACSE,QADT,GACsB,MAAKC,KAD3B,CACSD,QADT;;;AAGC,OAAI,CAACA,QAAL,EAAe;AACd,UAAKb,MAAL;AACA;AACD,G,QAEDe,S,GAAY,UAACJ,KAAD,EACZ;AAAA,OACSE,QADT,GACsB,MAAKC,KAD3B,CACSD,QADT;;;AAGC,OAAIA,QAAJ,EAAc;AACb;AACA;;AAED,OAAIF,MAAMK,gBAAV,EAA4B;AAC3B;AACA;;AAED,OAAIL,MAAMM,OAAN,IAAiBN,MAAMO,MAAvB,IAAiCP,MAAMQ,QAAvC,IAAmDR,MAAMS,OAA7D,EAAsE;AACrE;AACA;;AAED,WAAQT,MAAMU,OAAd;AAEC;AACA;AACA,SAAK,EAAL;AACA;AACA;AACA,SAAK,EAAL;AACC,YAAO,MAAKvB,IAAL,CAAUiB,SAAV,CAAoBJ,KAApB,CAAP;;AAED;AACA,SAAK,EAAL;AACC;AACA;AACA,WAAKd,MAAL;AACA,YAAOc,MAAMW,cAAN,EAAP;AAfF;AAiBA,G;;;AAxJD;;;AAiBA;AACA;;;AAGA;AACA;;;;;2BAKA;AAAA,gBAiBG,KAAKR,KAjBR;AAAA,OAGES,MAHF,UAGEA,MAHF;AAAA,OAIEC,SAJF,UAIEA,SAJF;AAAA,OAKEC,cALF,UAKEA,cALF;AAAA,OAMEC,eANF,UAMEA,eANF;AAAA,OAOEC,UAPF,UAOEA,UAPF;AAAA,OAQEC,KARF,UAQEA,KARF;AAAA,OASEC,SATF,UASEA,SATF;AAAA,OAUElC,OAVF,UAUEA,OAVF;AAAA,OAWEmC,gBAXF,UAWEA,gBAXF;AAAA,OAYEC,mBAZF,UAYEA,mBAZF;AAAA,OAaEC,gBAbF,UAaEA,gBAbF;AAAA,OAcEC,QAdF,UAcEA,QAdF;AAAA,OAeKC,IAfL;;AAAA,OAmBS3C,UAnBT,GAmBwB,KAAKH,KAnB7B,CAmBSG,UAnBT;;;AAqBC,OAAI4C,oBAAJ;AACA,OAAIC,kBAAJ;;AAEA,OAAIzC,OAAJ,EAAa;AACZyC,gBAAYH,QAAZ;AACA,QAAMI,iBAAiB,gBAAMC,aAAN,CAAoB3C,OAApB,CAAvB;AACAwC,kBACC;AAAA;AAAA;AACC,WAAM,KAAK5B,gBADZ;AAEC,eAAU,KAAKK,OAFhB;AAGC,iBAAY,KAAKG,SAHlB;AAIC,cAAS,KAAKL,MAJf;AAKC,uBAAgBqB,mBALjB;AAMC,oBAAaD,gBANd;AAOC,uBAAgBvC,aAAa,IAAb,GAAoB,KAPrC;AAQC,iBAAYyC,gBARb;AASGK;AATH,KADD;AAaA,IAhBD,MAgBO;AACND,gBAAY,gBAAMG,QAAN,CAAeC,OAAf,CAAuBP,QAAvB,CAAZ;AACAE,kBAAcC,UAAUK,KAAV,EAAd;AACAN,kBACC;AAAA;AAAA;AACC,WAAM,KAAK5B,gBADZ;AAEC,eAAU,KAAKK,OAFhB;AAGC,iBAAY,KAAKG,SAHlB;AAIC,cAAS,KAAKL,MAJf;AAKG,qBAAMgC,YAAN,CAAmBP,WAAnB,EAAgC,EAAE9B,KAAM,KAAKC,eAAb,EAAhC;AALH,KADD;AASA;;AAED,UACC;AAAA;AAAA;AACC,YAAQsB,KADT;AAEC,gBAAY,0BAAW,YAAX,EAAyBC,SAAzB,CAFb;AAIEM,eAJF;AAMC;AAAA;AAAA,kBACKD,IADL;AAEC,WAAK,KAAK9B,YAFX;AAGC,oBAAY,KAAKU,KAAL,CAAW,YAAX,CAHb;AAIC,sBAAgB,CAJjB;AAKC,kBAAY,KAAKtB,UALlB;AAMC,gBAAU,KAAKH,QANhB;AAOC,oBAAc,KAAKY,UAPpB;AAQC,kBAAY,KAAKA,UARlB;AASC,sBAAgB,KAAKQ,cATtB;AAUC,uBAAiBiB,eAVlB;AAWC,kBAAYC,UAXb;AAYC,yBAAmB,KAZpB;AAaC,iBAAU,cAbX;AAcES;AAdF;AAND,IADD;AAyBA;;;;EArJ0CnD,a,UAEpC0D,S,GACP;AACC;AACAd,YAAa,oBAAUe,MAFxB;;AAIC;AACAhB,QAAa,oBAAUiB,MALxB;;AAOC;AACA;AACAlB,aAAa,oBAAUiB,MATxB;;AAWC;AACA;AACAlB,kBAAkB,oBAAUoB,SAAV,CAAoB,CAAC,oBAAUC,IAAX,EAAiB,oBAAUC,KAAV,CAAgB,CAAC,KAAD,CAAhB,CAAjB,CAApB,EAAgEC,UAbnF;;AAeCtD,UAAU,oBAAUoD,IAfrB;AAgBCjB,mBAAmB,oBAAUc,MAhB9B;AAiBCb,sBAAsB,oBAAUa,MAjBjC;AAkBCZ,mBAAmB,oBAAUY;AAlB9B,C,SAqBOM,Y,GACP;AACC;AACA;AACAxB;AAHD,C;kBAzBoBvC,c","file":"ExpandableMenu.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport ExpandableList from './ExpandableList'\r\nimport List from './List'\r\nimport Close, { CloseIcon } from './Close'\r\n\r\nimport { focus } from './utility/focus'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class ExpandableMenu extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// Component CSS class\r\n\t\tclassName  : PropTypes.string,\r\n\r\n\t\t// CSS style object\r\n\t\tstyle      : PropTypes.object,\r\n\r\n\t\t// `aria-label` for the \"Close\" button\r\n\t\t// (which is an \"x\" visible in fullscreen mode).\r\n\t\tcloseLabel : PropTypes.string,\r\n\r\n\t\t// The \"x\" button icon that closes the `<Select/>`\r\n\t\t// in fullscreen mode on mobile devices.\r\n\t\tcloseButtonIcon : PropTypes.oneOfType([PropTypes.func, PropTypes.oneOf([false])]).isRequired,\r\n\r\n\t\ttoggler : PropTypes.func,\r\n\t\ttogglerAriaLabel : PropTypes.string,\r\n\t\ttogglerAriaHasPopup : PropTypes.string,\r\n\t\ttogglerClassName : PropTypes.string\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\t// The \"x\" button icon that closes the `<Select/>`\r\n\t\t// in fullscreen mode on mobile devices.\r\n\t\tcloseButtonIcon : CloseIcon\r\n\t}\r\n\r\n\tstate = {}\r\n\r\n\tonExpand = () => this.setState({ isExpanded: true })\r\n\r\n\tonCollapse = ({ focusOut }) =>\r\n\t{\r\n\t\tif (!focusOut) {\r\n\t\t\tthis.focus()\r\n\t\t}\r\n\t\tthis.setState({ isExpanded: false })\r\n\t}\r\n\r\n\t// `this.toggler` is deprecated.\r\n\tfocus = () => focus(this.toggler || this.togglerNode)\r\n\r\n\texpand   = () => this.list.expand()\r\n\tcollapse = () => this.list.collapse()\r\n\ttoggle   = () => this.list.toggle()\r\n\r\n\tonFocusOut = () => {\r\n\t\t// `window.rruiCollapseOnFocusOut` can be used\r\n\t\t// for debugging expandable contents.\r\n\t\tif (window.rruiCollapseOnFocusOut !== false) {\r\n\t\t\tthis.collapse()\r\n\t\t}\r\n\t}\r\n\r\n\tstoreListRef = (ref) => this.list = ref\r\n\r\n\t// (legacy) (deprecated)\r\n\t// Is used to focus legacy togglers.\r\n\tstoreTogglerRef = (ref) => this.toggler = ref\r\n\r\n\t// `this.togglerNode` is only used to determine\r\n\t// whether the focus is \"inside\" the component or \"outside\" of it.\r\n\tstoreTogglerNode = (node) => this.togglerNode = node\r\n\tgetTogglerNode = () => this.togglerNode\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tupward,\r\n\t\t\talignment,\r\n\t\t\tscrollIntoView,\r\n\t\t\tcloseButtonIcon,\r\n\t\t\tcloseLabel,\r\n\t\t\tstyle,\r\n\t\t\tclassName,\r\n\t\t\ttoggler,\r\n\t\t\ttogglerAriaLabel,\r\n\t\t\ttogglerAriaHasPopup,\r\n\t\t\ttogglerClassName,\r\n\t\t\tchildren,\r\n\t\t\t...rest\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tconst { isExpanded } = this.state\r\n\r\n\t\tlet menuToggler\r\n\t\tlet menuItems\r\n\r\n\t\tif (toggler) {\r\n\t\t\tmenuItems = children\r\n\t\t\tconst togglerElement = React.createElement(toggler)\r\n\t\t\tmenuToggler = (\r\n\t\t\t\t<button\r\n\t\t\t\t\tref={ this.storeTogglerNode }\r\n\t\t\t\t\tonClick={ this.onClick }\r\n\t\t\t\t\tonKeyDown={ this.onKeyDown }\r\n\t\t\t\t\tonBlur={ this.onBlur }\r\n\t\t\t\t\taria-haspopup={ togglerAriaHasPopup }\r\n\t\t\t\t\taria-label={ togglerAriaLabel }\r\n\t\t\t\t\taria-expanded={ isExpanded ? true : false }\r\n\t\t\t\t\tclassName={ togglerClassName }>\r\n\t\t\t\t\t{ togglerElement }\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\tmenuItems = React.Children.toArray(children)\r\n\t\t\tmenuToggler = menuItems.shift()\r\n\t\t\tmenuToggler = (\r\n\t\t\t\t<div\r\n\t\t\t\t\tref={ this.storeTogglerNode }\r\n\t\t\t\t\tonClick={ this.onClick }\r\n\t\t\t\t\tonKeyDown={ this.onKeyDown }\r\n\t\t\t\t\tonBlur={ this.onBlur }>\r\n\t\t\t\t\t{ React.cloneElement(menuToggler, { ref : this.storeTogglerRef }) }\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={ style }\r\n\t\t\t\tclassName={ classNames('rrui__menu', className) }>\r\n\r\n\t\t\t\t{menuToggler}\r\n\r\n\t\t\t\t<ExpandableList\r\n\t\t\t\t\t{...rest}\r\n\t\t\t\t\tref={this.storeListRef}\r\n\t\t\t\t\taria-label={this.props['aria-label']}\r\n\t\t\t\t\tscrollMaxItems={0}\r\n\t\t\t\t\tonCollapse={this.onCollapse}\r\n\t\t\t\t\tonExpand={this.onExpand}\r\n\t\t\t\t\tonTapOutside={this.onFocusOut}\r\n\t\t\t\t\tonFocusOut={this.onFocusOut}\r\n\t\t\t\t\tgetTogglerNode={this.getTogglerNode}\r\n\t\t\t\t\tcloseButtonIcon={closeButtonIcon}\r\n\t\t\t\t\tcloseLabel={closeLabel}\r\n\t\t\t\t\tfocusSelectedItem={false}\r\n\t\t\t\t\tclassName=\"rrui__shadow\">\r\n\t\t\t\t\t{menuItems}\r\n\t\t\t\t</ExpandableList>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tonBlur = (event) => this.list && this.list.onBlur(event)\r\n\r\n\tonClick = (event) =>\r\n\t{\r\n\t\tconst { disabled } = this.props\r\n\r\n\t\tif (!disabled) {\r\n\t\t\tthis.toggle()\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyDown = (event) =>\r\n\t{\r\n\t\tconst { disabled } = this.props\r\n\r\n\t\tif (disabled) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tswitch (event.keyCode)\r\n\t\t{\r\n\t\t\t// \"Up\" arrow.\r\n\t\t\t// Select the previous item (if present).\r\n\t\t\tcase 38:\r\n\t\t\t// \"Down\" arrow.\r\n\t\t\t// Select the next item (if present).\r\n\t\t\tcase 40:\r\n\t\t\t\treturn this.list.onKeyDown(event)\r\n\r\n\t\t\t// \"Enter\".\r\n\t\t\tcase 13:\r\n\t\t\t\t// Submit containing `<form/>`.\r\n\t\t\t\t// Expand otherwise.\r\n\t\t\t\tthis.expand()\r\n\t\t\t\treturn event.preventDefault()\r\n\t\t}\r\n\t}\r\n}"]}