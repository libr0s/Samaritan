{"version":3,"sources":["../source/ReactTimeAgo.js"],"names":["PureComponent","Component","ReactTimeAgo","props","timeAgo","getPreferredLocales","tick","updateInterval","verboseDateFormat","window","_react_time_ago_updater","stopAutoupdate","add","forceUpdate","formatVerboseDate","timeStyle","tooltip","container","style","className","tooltipClassName","date","Date","time","verboseDate","getVerboseDate","undefined","toISOString","format","createElement","locale","locales","concat","getDefaultLocale","input","convertToDate","propTypes","oneOfType","instanceOf","number","isRequired","string","arrayOf","bool","func","object","defaultProps","weekday","day","month","year","hour","minute","second","constructor","Error"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;;;;;;;;;AAEA;AACA,IAAMA,gBAAgB,gBAAMA,aAAN,IAAuB,gBAAMC,SAAnD;;IAEqBC,Y;;;AA6GpB,uBAAYC,KAAZ,EACA;AAAA;;AAAA,0HAEOA,KAFP;AACC;;;AAGA,QAAKC,OAAL,GAAe,gCAAsB,MAAKC,mBAAL,EAAtB,CAAf;AAJD;AAKC;;;;sCAGD;AAAA;;AAAA,gBAOG,KAAKF,KAPR;AAAA,OAGEG,IAHF,UAGEA,IAHF;AAAA,OAIEC,cAJF,UAIEA,cAJF;AAAA,OAKEC,iBALF,UAKEA,iBALF;;AASC;;AACA,OAAIF,IAAJ,EACA;AACC;AACA,QAAI,CAACG,OAAOC,uBAAZ,EAAqC;AACpCD,YAAOC,uBAAP,GAAiC,uBAAaH,cAAb,CAAjC;AACA;;AAED;AACA,SAAKI,cAAL,GAAsBF,OAAOC,uBAAP,CAA+BE,GAA/B,CAAmC;AAAA,YAAM,OAAKC,WAAL,EAAN;AAAA,KAAnC,CAAtB;AACA;;AAED;AACA,QAAKC,iBAAL,GAAyB,oCAA2B,KAAKT,mBAAL,EAA3B,EAAuDG,iBAAvD,CAAzB;AACA,QAAKK,WAAL;AACA;;;yCAGD;AACC,OAAI,KAAKF,cAAT,EAAyB;AACxB,SAAKA,cAAL;AACA;AACD;;;2BAGD;AAAA,iBAUG,KAAKR,KAVR;AAAA,OAGEY,SAHF,WAGEA,SAHF;AAAA,OAIEC,OAJF,WAIEA,OAJF;AAAA,OAKEC,SALF,WAKEA,SALF;AAAA,OAMEC,KANF,WAMEA,KANF;AAAA,OAOEC,SAPF,WAOEA,SAPF;AAAA,OAQEC,gBARF,WAQEA,gBARF;AAAA,OAYOC,IAZP,GAYgB,KAAKlB,KAZrB,CAYOkB,IAZP;;AAcC;;AACAA,UAAQA,gBAAgBC,IAAjB,IAA0BD,IAAjC;AACA,OAAME,OAAQ,OAAOF,IAAP,KAAgB,QAAjB,IAA8BA,IAA3C;;AAEA;AACAA,UAAOA,QAAQ,IAAIC,IAAJ,CAASC,IAAT,CAAf;;AAEA;AACA;AACA;AACA,OAAMC,cAAc,KAAKV,iBAAL,GAAyB,KAAKW,cAAL,CAAoBJ,IAApB,CAAzB,GAAqDK,SAAzE;;AAEA,OAAMtB,UAEL;AAAA;AAAA;AACC,eAAWiB,KAAKM,WAAL,EADZ;AAEC,YAAQX,UAAUQ,WAAV,GAAwBE,SAFjC;AAGC,YAAQT,YAAYS,SAAZ,GAAwBR,KAHjC;AAIC,gBAAYD,YAAYS,SAAZ,GAAwBP,SAJrC;AAMG,SAAKf,OAAL,CAAawB,MAAb,CAAoBP,IAApB,EAA0BN,SAA1B;AANH,IAFD;;AAYA,OAAIE,SAAJ,EACA;AACC,WAAO,gBAAMY,aAAN,CAAoBZ,SAApB,EACP;AACCO,6BADD;AAECJ,uCAFD;AAGCD,yBAHD;AAICD;AAJD,KADO,EAOPd,OAPO,CAAP;AAQA;;AAED,UAAOA,OAAP;AACA;;AAED;;;;wCAEA;AAAA,OACS0B,MADT,GACoB,KAAK3B,KADzB,CACS2B,MADT;AAAA,OAEOC,OAFP,GAEmB,KAAK5B,KAFxB,CAEO4B,OAFP;;AAIC;;AACA,OAAID,MAAJ,EAAY;AACXC,cAAU,CAACD,MAAD,EAASE,MAAT,CAAgBD,OAAhB,CAAV;AACA;;AAED;AACAA,aAAUA,QAAQC,MAAR,CAAe,4BAAkBC,gBAAlB,EAAf,CAAV;;AAEA,UAAOF,OAAP;AACA;;AAED;AACA;AACA;AACA;AACA;;;;iCACeG,K,EACf;AAAA,OACSpB,iBADT,GAC+B,KAAKX,KADpC,CACSW,iBADT;;;AAGC,OAAIA,iBAAJ,EAAuB;AACtB,WAAOA,kBAAkBqB,cAAcD,KAAd,CAAlB,CAAP;AACA;;AAED,UAAO,KAAKpB,iBAAL,CAAuBqB,cAAcD,KAAd,CAAvB,CAAP;AACA;;;;EA5OwClC,a;;AA+O1C;;;AA/OqBE,Y,CAEbkC,S,GACP;AACC;AACA;AACAf,OAAO,oBAAUgB,SAAV,CAAoB,CAC1B,oBAAUC,UAAV,CAAqBhB,IAArB,CAD0B,EAE1B,oBAAUiB,MAFgB,CAApB,EAGJC,UANJ;;AAQC;AACA;AACA;AACAV,SAAS,oBAAUW,MAXpB;;AAaC;AACA;AACA;AACA;AACAV,UAAU,oBAAUW,OAAV,CAAkB,oBAAUD,MAA5B,CAjBX;;AAmBC;AACA;AACA1B,6BArBD;;AAuBC;AACA;AACA;AACAC,UAAU,oBAAU2B,IAAV,CAAeH,UA1B1B;;AA4BC;AACA;AACA1B,oBAAoB,oBAAU8B,IA9B/B;;AAgCC;AACA;AACA;AACApC,oBAAoB,oBAAUqC,MAnC/B;;AAqCC;AACA;AACAtC,iBAAiB,oBAAUgC,MAvC5B;;AAyCC;AACA;AACA;AACAjC,OAAO,oBAAUqC,IA5ClB;;AA8CC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA1B,YAAY,oBAAU2B,IAnEvB;;AAqEC;AACA;AACA1B,QAAQ,oBAAU2B,MAvEnB;;AAyEC;AACA1B,YAAY,oBAAUsB,MA1EvB;;AA4EC;AACArB,mBAAmB,oBAAUqB;AA7E9B,C;AAHoBvC,Y,CAmFb4C,Y,GACP;AACCf,UAAU,EADX;;AAGCf,UAAU,IAHX;;AAKC;AACAR,oBACA;AACCuC,WAAe,MADhB;AAECC,OAAe,SAFhB;AAGCC,SAAe,MAHhB;AAICC,QAAe,SAJhB;AAKCC,QAAe,SALhB;AAMCC,UAAe,SANhB;AAOCC,UAAe;AACf;AARD,EAPD;;AAkBC;AACA9C,iBAAiB,KAAK,IAnBvB;;AAqBC;AACAD,OAAO;AAtBR,C;kBApFoBJ,Y;AAgPrB,SAASiC,aAAT,CAAuBD,KAAvB,EACA;AACC,KAAIA,MAAMoB,WAAN,KAAsBhC,IAA1B,EAAgC;AAC/B,SAAOY,KAAP;AACA;;AAED,KAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC9B,SAAO,IAAIZ,IAAJ,CAASY,KAAT,CAAP;AACA;;AAED,OAAM,IAAIqB,KAAJ,gDAAsDrB,KAAtD,yCAAsDA,KAAtD,YAAgEA,KAAhE,CAAN;AACA","file":"ReactTimeAgo.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport JavascriptTimeAgo from 'javascript-time-ago'\r\nimport { style } from 'javascript-time-ago/prop-types'\r\n\r\nimport Periodic from './Periodic'\r\nimport createVerboseDateFormatter from './verboseDateFormatter'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class ReactTimeAgo extends PureComponent\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// The `date` or `timestamp`.\r\n\t\t// E.g. `new Date()` or `1355972400000`.\r\n\t\tdate : PropTypes.oneOfType([\r\n\t\t\tPropTypes.instanceOf(Date),\r\n\t\t\tPropTypes.number\r\n\t\t]).isRequired,\r\n\r\n\t\t// Preferred locale.\r\n\t\t// Is 'en' by default.\r\n\t\t// E.g. 'ru-RU'.\r\n\t\tlocale : PropTypes.string,\r\n\r\n\t\t// Preferred locales (ordered).\r\n\t\t// Will choose the first suitable locale from this list.\r\n\t\t// (the one that has been initialized)\r\n\t\t// E.g. `['ru-RU', 'en-GB']`.\r\n\t\tlocales : PropTypes.arrayOf(PropTypes.string),\r\n\r\n\t\t// Date/time formatting style.\r\n\t\t// E.g. 'twitter', 'fuzzy', or custom (`{ gradation: […], units: […], flavour: 'long', custom: function }`)\r\n\t\ttimeStyle : style,\r\n\r\n\t\t// Whether HTML `tooltip` attribute should be set\r\n\t\t// to verbosely formatted date (is `true` by default).\r\n\t\t// Set to `false` to disable the native HTML `tooltip`.\r\n\t\ttooltip : PropTypes.bool.isRequired,\r\n\r\n\t\t// An optional function returning what will be output in the HTML `title` tooltip attribute.\r\n\t\t// (by default it's `(date) => new Intl.DateTimeFormat(locale, {…}).format(date)`)\r\n\t\tformatVerboseDate : PropTypes.func,\r\n\r\n\t\t// `Intl.DateTimeFormat` format for the HTML `title` tooltip attribute.\r\n\t\t// Is used when `formatVerboseDate` is not specified.\r\n\t\t// By default outputs a verbose date.\r\n\t\tverboseDateFormat : PropTypes.object,\r\n\r\n\t\t// How often to update all `<ReactTimeAgo/>` elements on a page.\r\n\t\t// (is once in a minute by default)\r\n\t\tupdateInterval : PropTypes.number,\r\n\r\n\t\t// Set to `false` to disable automatic refresh of\r\n\t\t// `<ReactTimeAgo/>` elements on a page as time goes by.\r\n\t\t// (is `true` by default)\r\n\t\ttick : PropTypes.bool,\r\n\r\n\t\t// React Component to wrap the resulting `<time/>` React Element.\r\n\t\t// Receives `verboseDate` and `children` properties.\r\n\t\t// `verboseDate` can be used for displaying verbose date label\r\n\t\t// in an \"on mouse over\" (or \"on touch\") tooltip.\r\n\t\t//\r\n\t\t// ```js\r\n\t\t// import React from 'react'\r\n\t\t// import ReactTimeAgo from 'react-time-ago'\r\n\t\t// import { Tooltip } from 'react-responsive-ui'\r\n\t\t// \r\n\t\t// export default function TimeAgo(props) {\r\n\t\t//   return <ReactTimeAgo {...props} container={Container} tooltip={false}/>\r\n\t\t// }\r\n\t\t// \r\n\t\t// const Container = ({ verboseDate, children }) => (\r\n\t\t//   <Tooltip content={verboseDate}>\r\n\t\t//     {children}\r\n\t\t//   </Tooltip>\r\n\t\t// )\r\n\t\t// ```\r\n\t\t//\r\n\t\tcontainer : PropTypes.func,\r\n\r\n\t\t// CSS `style` object.\r\n\t\t// E.g. `{ color: white }`.\r\n\t\tstyle : PropTypes.object,\r\n\r\n\t\t// CSS class name.\r\n\t\tclassName : PropTypes.string,\r\n\r\n\t\t// Tooltip element CSS class name.\r\n\t\ttooltipClassName : PropTypes.string\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\tlocales : [],\r\n\r\n\t\ttooltip : true,\r\n\r\n\t\t// Thursday, December 20, 2012, 7:00:00 AM GMT+4\r\n\t\tverboseDateFormat:\r\n\t\t{\r\n\t\t\tweekday      : 'long',\r\n\t\t\tday          : 'numeric',\r\n\t\t\tmonth        : 'long',\r\n\t\t\tyear         : 'numeric',\r\n\t\t\thour         : 'numeric',\r\n\t\t\tminute       : '2-digit',\r\n\t\t\tsecond       : '2-digit',\r\n\t\t\t// timeZoneName : 'short'\r\n\t\t},\r\n\r\n\t\t// Updates once a minute\r\n\t\tupdateInterval : 60 * 1000,\r\n\r\n\t\t// Refreshes time in a web browser by default\r\n\t\ttick : true\r\n\t}\r\n\r\n\tconstructor(props)\r\n\t{\r\n\t\t// `this.props` are used in `.getPreferredLocales()`.\r\n\t\tsuper(props)\r\n\r\n\t\tthis.timeAgo = new JavascriptTimeAgo(this.getPreferredLocales())\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\ttick,\r\n\t\t\tupdateInterval,\r\n\t\t\tverboseDateFormat\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\t// If time label autoupdates are enabled.\r\n\t\tif (tick)\r\n\t\t{\r\n\t\t\t// Run automatic time label updater (in a web browser).\r\n\t\t\tif (!window._react_time_ago_updater) {\r\n\t\t\t\twindow._react_time_ago_updater = new Periodic(updateInterval)\r\n\t\t\t}\r\n\r\n\t\t\t// Register for the relative time autoupdate as the time goes by.\r\n\t\t\tthis.stopAutoupdate = window._react_time_ago_updater.add(() => this.forceUpdate())\r\n\t\t}\r\n\r\n\t\t// Format verbose date for HTML `tooltip` attribute.\r\n\t\tthis.formatVerboseDate = createVerboseDateFormatter(this.getPreferredLocales(), verboseDateFormat)\r\n\t\tthis.forceUpdate()\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tif (this.stopAutoupdate) {\r\n\t\t\tthis.stopAutoupdate()\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\ttimeStyle,\r\n\t\t\ttooltip,\r\n\t\t\tcontainer,\r\n\t\t\tstyle,\r\n\t\t\tclassName,\r\n\t\t\ttooltipClassName\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tlet { date } = this.props\r\n\r\n\t\t// The date or timestamp that was passed.\r\n\t\tdate = (date instanceof Date) && date\r\n\t\tconst time = (typeof date === 'number') && date\r\n\r\n\t\t// Convert timestamp to `Date`.\r\n\t\tdate = date || new Date(time)\r\n\r\n\t\t// Only after `componentDidMount()` (only on client side).\r\n\t\t// The rationale is that if javascript is disabled (e.g. Tor Browser)\r\n\t\t// then the `<Tooltip/>` component won't ever be able to show itself.\r\n\t\tconst verboseDate = this.formatVerboseDate ? this.getVerboseDate(date) : undefined\r\n\r\n\t\tconst timeAgo =\r\n\t\t(\r\n\t\t\t<time\r\n\t\t\t\tdateTime={ date.toISOString() }\r\n\t\t\t\ttitle={ tooltip ? verboseDate : undefined } \r\n\t\t\t\tstyle={ container ? undefined : style } \r\n\t\t\t\tclassName={ container ? undefined : className }>\r\n\r\n\t\t\t\t{ this.timeAgo.format(date, timeStyle) }\r\n\t\t\t</time>\r\n\t\t)\r\n\r\n\t\tif (container)\r\n\t\t{\r\n\t\t\treturn React.createElement(container,\r\n\t\t\t{\r\n\t\t\t\tverboseDate,\r\n\t\t\t\ttooltipClassName,\r\n\t\t\t\tclassName,\r\n\t\t\t\tstyle\r\n\t\t\t},\r\n\t\t\ttimeAgo)\r\n\t\t}\r\n\r\n\t\treturn timeAgo\r\n\t}\r\n\r\n\t// Composes a list of preferred locales\r\n\tgetPreferredLocales()\r\n\t{\r\n\t\tconst { locale } = this.props\r\n\t\tlet { locales } = this.props\r\n\r\n\t\t// Convert `locale` to `locales`.\r\n\t\tif (locale) {\r\n\t\t\tlocales = [locale].concat(locales)\r\n\t\t}\r\n\r\n\t\t// `javascript-time-ago` default locale.\r\n\t\tlocales = locales.concat(JavascriptTimeAgo.getDefaultLocale())\r\n\r\n\t\treturn locales\r\n\t}\r\n\r\n\t// Verbose date string.\r\n\t// Is used as a tooltip text.\r\n\t//\r\n\t// E.g. \"Sunday, May 18th, 2012, 18:45\"\r\n\t//\r\n\tgetVerboseDate(input)\r\n\t{\r\n\t\tconst { formatVerboseDate } = this.props\r\n\r\n\t\tif (formatVerboseDate) {\r\n\t\t\treturn formatVerboseDate(convertToDate(input))\r\n\t\t}\r\n\r\n\t\treturn this.formatVerboseDate(convertToDate(input))\r\n\t}\r\n}\r\n\r\n// Converts argument into a `Date`.\r\nfunction convertToDate(input)\r\n{\r\n\tif (input.constructor === Date) {\r\n\t\treturn input\r\n\t}\r\n\r\n\tif (typeof input === 'number') {\r\n\t\treturn new Date(input)\r\n\t}\r\n\r\n\tthrow new Error(`Unsupported react-time-ago input: ${typeof input}, ${input}`)\r\n}"]}