'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = createVerboseDateFormatter;

var _javascriptTimeAgo = require('javascript-time-ago');

var _cache = require('javascript-time-ago/cache');

var _cache2 = _interopRequireDefault(_cache);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cache = new _cache2.default();

/**
 * Creates verbose date formatter.
 * 
 * @param {string} locale - Date formatting locale
 * @param {object} format - Output format
 * @param {string} format.day     - Day format
 * @param {string} format.month   - Month format
 * @param {string} format.year    - Year format
 * @param {string} format.weekday - Weekday format
 * @param {string} format.hour    - Hour format
 * @param {string} format.minute  - Minute format
 * @param {string} format.second  - Second format
 *
 * @returns {Function} `(date) -> string`.
 */
function createVerboseDateFormatter(locales, format) {
	// Fall back to `date.toString()` for old web browsers.
	// https://caniuse.com/#search=intl
	if (!(0, _javascriptTimeAgo.intlDateTimeFormatSupported)()) {
		return function (date) {
			return date.toString();
		};
	}

	// If none of the `locales` are supported
	// a default system locale will be used.
	var locale = (0, _javascriptTimeAgo.intlDateTimeFormatSupportedLocale)(locales);

	// `Intl.DateTimeFormat` format caching key.
	// E.g. `"{"day":"numeric","month":"short",...}"`.
	// Didn't benchmark what's faster:
	// creating a new `Intl.DateTimeFormat` instance
	// or stringifying a small JSON `format`.
	// Perhaps strigifying JSON `format` is faster.
	var formatFingerprint = JSON.stringify(format);

	// Get `Intl.DateTimeFormat` instance for these `locale` and `format`.
	// (`locale` can be `undefined` therefore `String(locale)`)
	var formatter = cache.get(String(locale), formatFingerprint) || cache.put(String(locale), formatFingerprint, new Intl.DateTimeFormat(locale, format));

	// Return date formatter
	return function (date) {
		return formatter.format(date);
	};
}
//# sourceMappingURL=verboseDateFormatter.js.map